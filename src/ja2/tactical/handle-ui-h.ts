// DEFINES
const UIEVENT_SINGLEEVENT = 0x00000002;
const UIEVENT_SNAPMOUSE = 0x00000008;

const NO_GUY_SELECTION = 0;
const SELECTED_GUY_SELECTION = 1;
const NONSELECTED_GUY_SELECTION = 2;
const ENEMY_GUY_SELECTION = 3;

const MOUSE_MOVING_IN_TILE = 0x00000001;
const MOUSE_MOVING = 0x00000002;
const MOUSE_MOVING_NEW_TILE = 0x00000004;
const MOUSE_STATIONARY = 0x00000008;

const MOVEUI_TARGET_INTTILES = 1;
const MOVEUI_TARGET_ITEMS = 2;
const MOVEUI_TARGET_MERCS = 3;
const MOVEUI_TARGET_MERCSFORAID = 5;
const MOVEUI_TARGET_WIREFENCE = 6;
const MOVEUI_TARGET_BOMB = 7;
const MOVEUI_TARGET_STEAL = 8;
const MOVEUI_TARGET_REPAIR = 9;
const MOVEUI_TARGET_JAR = 10;
const MOVEUI_TARGET_CAN = 11;
const MOVEUI_TARGET_REFUEL = 12;

const MOVEUI_RETURN_ON_TARGET_MERC = 1;

const enum Enum206 {
  DONT_CHANGEMODE,
  IDLE_MODE,
  MOVE_MODE,
  ACTION_MODE,
  MENU_MODE,
  POPUP_MODE,
  CONFIRM_MOVE_MODE,
  ADJUST_STANCE_MODE,
  CONFIRM_ACTION_MODE,
  HANDCURSOR_MODE,
  GETTINGITEM_MODE,
  ENEMYS_TURN_MODE,
  LOOKCURSOR_MODE,
  TALKINGMENU_MODE,
  TALKCURSOR_MODE,
  LOCKUI_MODE,
  OPENDOOR_MENU_MODE,
  LOCKOURTURN_UI_MODE,
  EXITSECTORMENU_MODE,
  RUBBERBAND_MODE,
  JUMPOVER_MODE,
}

type UI_HANDLEFNC = (a: Pointer<UI_EVENT>) => UINT32;

interface UI_EVENT {
  uiFlags: UINT32;
  ChangeToUIMode: UI_MODE;
  HandleEvent: UI_HANDLEFNC;
  fFirstTime: BOOLEAN;
  fDoneMenu: BOOLEAN;
  uiMenuPreviousMode: UINT32;
  uiParams: UINT32[] /* [3] */;
}

// EVENT ENUMERATION
const enum Enum207 {
  I_DO_NOTHING,
  I_EXIT,
  I_NEW_MERC,
  I_NEW_BADMERC,
  I_SELECT_MERC,
  I_ENTER_EDIT_MODE,
  I_ENTER_PALEDIT_MODE,
  I_ENDTURN,
  I_TESTHIT,
  I_CHANGELEVEL,
  I_ON_TERRAIN,
  I_CHANGE_TO_IDLE,
  I_LOADLEVEL,
  I_SOLDIERDEBUG,
  I_LOSDEBUG,
  I_LEVELNODEDEBUG,
  I_GOTODEMOMODE,
  I_LOADFIRSTLEVEL,
  I_LOADSECONDLEVEL,
  I_LOADTHIRDLEVEL,
  I_LOADFOURTHLEVEL,
  I_LOADFIFTHLEVEL,

  ET_ON_TERRAIN,
  ET_ENDENEMYS_TURN,

  M_ON_TERRAIN,
  M_CHANGE_TO_ACTION,
  M_CHANGE_TO_HANDMODE,
  M_CYCLE_MOVEMENT,
  M_CYCLE_MOVE_ALL,
  M_CHANGE_TO_ADJPOS_MODE,

  POPUP_DOMESSAGE,

  A_ON_TERRAIN,
  A_CHANGE_TO_MOVE,
  A_CHANGE_TO_CONFIM_ACTION,
  A_END_ACTION,
  U_MOVEMENT_MENU,
  U_POSITION_MENU,

  C_WAIT_FOR_CONFIRM,
  C_MOVE_MERC,
  C_ON_TERRAIN,

  PADJ_ADJUST_STANCE,

  CA_ON_TERRAIN,
  CA_MERC_SHOOT,
  CA_END_CONFIRM_ACTION,

  HC_ON_TERRAIN,

  G_GETTINGITEM,

  LC_ON_TERRAIN,
  LC_CHANGE_TO_LOOK,
  LC_LOOK,

  TA_TALKINGMENU,

  T_ON_TERRAIN,
  T_CHANGE_TO_TALKING,

  LU_ON_TERRAIN,
  LU_BEGINUILOCK,
  LU_ENDUILOCK,

  OP_OPENDOORMENU,

  LA_ON_TERRAIN,
  LA_BEGINUIOURTURNLOCK,
  LA_ENDUIOUTURNLOCK,

  EX_EXITSECTORMENU,

  RB_ON_TERRAIN,

  JP_ON_TERRAIN,
  JP_JUMP,

  NUM_UI_EVENTS,
}

type UIKEYBOARD_HOOK = (pInputEvent: Pointer<InputAtom>) => BOOLEAN;

// GLOBAL EVENT STRUCT
UI_EVENT gEvents[NUM_UI_EVENTS];

// GLOBAL STATUS VARS
UI_MODE gCurrentUIMode;
UI_MODE gOldUIMode;
UINT32 guiCurrentEvent;
INT16 gsSelectedLevel;
BOOLEAN gfPlotNewMovement;
UINT32 guiPendingOverrideEvent;

// GLOBALS
BOOLEAN gfUIDisplayActionPoints;
BOOLEAN gfUIDisplayActionPointsInvalid;
BOOLEAN gfUIDisplayActionPointsBlack;
BOOLEAN gfUIDisplayActionPointsCenter;
INT16 gUIDisplayActionPointsOffY;
INT16 gUIDisplayActionPointsOffX;
BOOLEAN gfUIDoNotHighlightSelMerc;
UINT32 guiShowUPDownArrows;
BOOLEAN gfUIHandleSelection;
BOOLEAN gfUIHandleSelectionAboveGuy;
INT16 gsSelectedGridNo;
INT16 gsSelectedGuy;
BOOLEAN gfUIInDeadlock;
UINT8 gUIDeadlockedSoldier;

BOOLEAN gfUIMouseOnValidCatcher;
UINT8 gubUIValidCatcherID;
BOOLEAN gUIUseReverse;

BOOLEAN gfUIHandleShowMoveGrid;
UINT16 gsUIHandleShowMoveGridLocation;

BOOLEAN gfUIDisplayDamage;
INT8 gbDamage;
UINT16 gsDamageGridNo;

BOOLEAN gfFontPopupDo;

BOOLEAN gUITargetReady;
BOOLEAN gUITargetShotWaiting;
UINT16 gsUITargetShotGridNo;

INT16 gzLocation[20];
BOOLEAN gfUIBodyHitLocation;

INT16 gzIntTileLocation[20];
BOOLEAN gfUIIntTileLocation;

INT16 gzIntTileLocation2[20];
BOOLEAN gfUIIntTileLocation2;

BOOLEAN gfUIWaitingForUserSpeechAdvance;
BOOLEAN gfUIKeyCheatModeOn;

BOOLEAN gfUIAllMoveOn;
BOOLEAN gfUICanBeginAllMoveCycle;

BOOLEAN gfUIRefreshArrows;

BOOLEAN gfUIHandlePhysicsTrajectory;

// GLOBALS FOR FAST LOOKUP FOR FINDING MERCS FROM THE MOUSE
BOOLEAN gfUISelectiveTargetFound;
UINT16 gusUISelectiveTargetID;
UINT32 guiUISelectiveTargetFlags;

BOOLEAN gfUIFullTargetFound;
UINT16 gusUIFullTargetID;
UINT32 guiUIFullTargetFlags;

BOOLEAN gfUIConfirmExitArrows;
INT16 gsJumpOverGridNo;

BOOLEAN gfUIShowCurIntTile;

SGPRect gRubberBandRect;
BOOLEAN gRubberBandActive;

BOOLEAN gfUIForceReExamineCursorData;

INT16 guiCreateGuyIndex;
INT16 guiCreateBadGuyIndex;
